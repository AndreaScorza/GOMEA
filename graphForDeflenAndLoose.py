import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import statistics

# DEFLEN6
#absolute
RUN1A = [[0, 2], [189000, 4.0], [375000, 4.0], [561000, 5.0], [747000, 5.0], [933000, 5.0], [1119000, 5.0], [1305000, 5.0], [1491000, 5.0], [1677000, 5.0], [1863000, 6.0], [2049000, 6.0]]
RUN2A = [[0, 2], [189000, 4.0], [375000, 5.0], [561000, 5.0], [747000, 6.0], [933000, 6.0], [1119000, 6.0], [1305000, 6.0], [1491000, 6.0], [1677000, 6.0], [1863000, 6.0], [2049000, 6.0]]
RUN3A = [[0, 2], [189000, 4.0], [375000, 5.0], [561000, 5.0], [747000, 5.0], [933000, 6.0], [1119000, 6.0], [1305000, 6.0], [1491000, 6.0], [1677000, 6.0], [1863000, 6.0], [2049000, 6.0]]
RUN4A = [[0, 2], [189000, 4.0], [375000, 5.0], [561000, 5.0], [747000, 5.0], [933000, 5.0], [1119000, 6.0], [1305000, 6.0], [1491000, 6.0], [1677000, 6.0], [1863000, 6.0], [2049000, 6.0]]
RUN5A = [[0, 1], [189000, 5.0], [375000, 6.0], [561000, 6.0], [747000, 6.0], [933000, 6.0], [1119000, 6.0], [1305000, 6.0], [1491000, 6.0], [1677000, 6.0], [1863000, 6.0], [2049000, 6.0]]


#relative
RUN1B = [[0, 3], [157500, 4.0], [312500, 4.0], [467500, 5.0], [622500, 5.0], [777500, 5.0], [932500, 5.0], [1087500, 5.0], [1242500, 6.0], [1397500, 6.0], [1552500, 6.0], [1707500, 6.0], [1862500, 6.0], [2017500, 6.0]]
RUN2B = [[0, 2], [157500, 4.0], [312500, 5.0], [467500, 5.0], [622500, 5.0], [777500, 5.0], [932500, 6.0], [1087500, 6.0], [1242500, 6.0], [1397500, 6.0], [1552500, 6.0], [1707500, 6.0], [1862500, 6.0], [2017500, 6.0]]
RUN3B = [[0, 2], [157500, 4.0], [312500, 4.0], [467500, 5.0], [622500, 5.0], [777500, 5.0], [932500, 5.0], [1087500, 5.0], [1242500, 5.0], [1397500, 6.0], [1552500, 6.0], [1707500, 6.0], [1862500, 6.0], [2017500, 6.0]]
RUN4B = [[0, 2], [157500, 4.0], [312500, 4.0], [467500, 5.0], [622500, 5.0], [777500, 5.0], [932500, 5.0], [1087500, 6.0], [1242500, 6.0], [1397500, 6.0], [1552500, 6.0], [1707500, 6.0], [1862500, 6.0], [2017500, 6.0]]
RUN5B = [[0, 2], [157500, 3.0], [312500, 4.0], [467500, 4.0], [622500, 5.0], [777500, 5.0], [932500, 5.0], [1087500, 5.0], [1242500, 5.0], [1397500, 5.0], [1552500, 5.0], [1707500, 6.0], [1862500, 6.0], [2017500, 6.0]]

# LOOSE
#absolute
RUN1C = [[0, 1], [157500, 4.0], [312500, 4.0], [467500, 5.0], [622500, 5.0], [777500, 5.0], [932500, 5.0], [1087500, 5.0], [1242500, 6], [1397500, 6], [1552500, 6], [1707500, 6], [1862500, 7], [2017500, 7]]
RUN2C = [[0, 2], [157500, 4.0], [312500, 4.0], [467500, 5.0], [622500, 5.0], [777500, 5.0], [932500, 5.0], [1087500, 6.0], [1242500, 6.0], [1397500, 6.0], [1552500, 7.0], [1707500, 7.0], [1862500, 7.0], [2017500, 7.0]]
RUN3C = [[0, 2], [157500, 4.0], [312500, 4.0], [467500, 4.0], [622500, 5.0], [777500, 5.0], [932500, 6.0], [1087500, 6.0], [1242500, 6.0], [1397500, 6.0], [1552500, 7.0], [1707500, 7.0], [1862500, 7.0], [2017500, 7.0]]
RUN4C = [[0, 2], [157500, 4.0], [312500, 5.0], [467500, 5.0], [622500, 5.0], [777500, 5.0], [932500, 5.0], [1087500, 5.0], [1242500, 5.0], [1397500, 5.0], [1552500, 5.0], [1707500, 6.0], [1862500, 6.0], [2017500, 6.0]]
RUN5C = [[0, 2], [157500, 4.0], [312500, 4.0], [467500, 4.0], [622500, 5.0], [777500, 5.0], [932500, 5.0], [1087500, 5.0], [1242500, 5.0], [1397500, 6.0], [1552500, 6.0], [1707500, 6.0], [1862500, 6.0], [2017500, 6.0]]

#relative
RUN1D = [[0, 2], [189000, 4.0], [375000, 4.0], [561000, 5.0], [747000, 5.0], [933000, 5.0], [1119000, 6.0], [1305000, 6.0], [1491000, 6.0], [1677000, 6.0], [1863000, 6.0], [2049000, 6.0]]
RUN2D = [[0, 2], [189000, 4.0], [375000, 5.0], [561000, 5.0], [747000, 5.0], [933000, 5.0], [1119000, 5.0], [1305000, 5.0], [1491000, 5.0], [1677000, 5.0], [1863000, 5.0], [2049000, 5.0]]
RUN3D = [[0, 2], [189000, 4.0], [375000, 5.0], [561000, 5.0], [747000, 5.0], [933000, 5.0], [1119000, 5.0], [1305000, 6.0], [1491000, 6.0], [1677000, 6.0], [1863000, 6.0], [2049000, 6.0]]
RUN4D = [[0, 2], [189000, 4.0], [375000, 4.0], [561000, 5.0], [747000, 5.0], [933000, 5.0], [1119000, 5.0], [1305000, 5.0], [1491000, 5.0], [1677000, 5.0], [1863000, 6.0], [2049000, 6.0]]
RUN5D = [[0, 2], [189000, 5.0], [375000, 6.0], [561000, 6.0], [747000, 6.0], [933000, 6.0], [1119000, 6.0], [1305000, 6.0], [1491000, 6.0], [1677000, 6.0], [1863000, 6.0], [2049000, 6.0]]



def sameLength(list):
    ln = len(list)
    score = list[ln - 1][-1:][0]
    while len(list) < 100:
        list.append([ln, score])
        ln += 1
    return list




def avgVect(a,b,c,d,e):
    avg = []
    for x in range(0, len(a)):
        avg.append((a[x][-1:][0] + b[x][-1:][0] + c[x][-1:][0] + d[x][-1:][0] + e[x][-1:][0]) / 5)
    return avg


def printAbsolute():
    df=pd.DataFrame({'x_values': [row[0] for row in RUN1A], 'y_values': avgVect(RUN1A, RUN2A, RUN3A, RUN4A, RUN5A)})
    plt.title("Absolute ordering problem, deflen6 coding")
    plt.xlabel("Number of function evaluations")
    plt.ylabel("Maximum number of correct subproblems")
    plt.ylim(0,8.3)
    plt.xlim(0, 2100000)
    plt.plot( 'x_values', 'y_values', data=df, color='skyblue')
    plt.grid()
    plt.savefig("AbsoluteDeflen6.png")
    #plt.show()


def printRelative():
    df = pd.DataFrame({'x_values': [row[0] for row in RUN1A], 'y_values': avgVect(RUN1S, RUN2S, RUN3S, RUN4S, RUN5S)})
    plt.title("Relative Random LT")
    plt.xlabel("Generation Number")
    plt.ylabel("Maximum number of correct subproblems")
    plt.ylim(0,8.3)
    plt.xlim(0, 2000000)
    plt.plot('x_values', 'y_values', data=df, color='skyblue')
    plt.grid()
    plt.savefig("RelativeRandom.png")
    #plt.show()


print(printAbsolute())
#print(printRelative())

'''
bisogna vedere solo con delta1 o solo con delta2
---

correggi che lultimo pezzo viene salvato nella lista
'''

